{{ template "head" . }}

<div id="wizard">
    <!-- Step 1: Choose Tournament -->
    <div id="step1" class="card mb-3 p-3">
        <h2 class="card-title">Step 1: Choose a Tournament</h2>
        <select id="tournamentSelect" class="form-select mb-3">
            {{ range .Tournaments }}
                <option value="{{ .ID }}">{{ .Name }}</option>
            {{ end }}
        </select>
        <button class="btn btn-primary" onclick="nextStep()">Next</button>
    </div>

    <!-- Step 2 & 3: Enter Scores and Display Results -->
    <div id="step2" style="display:none;">
        <div style="flex: 1; margin-right: 10px; overflow-y: auto; height: 100vh;">
            <h2>Step 2: Enter Scores</h2>
            <div id="archersList">
                <!-- Archer list with input fields will be populated dynamically -->
            </div>
        </div>
        <div style="flex: 1; margin-left: 10px;">
            <h2>Step 3: Results</h2>
            <ul id="resultsList" class="list-group">
                <!-- Results will be displayed here -->
            </ul>
        </div>
    </div>
</div>

<script>
    let currentStep = 1;
    let tournaments = [];
    let archers = [];

    async function fetchArchers() {
        try {
            const tournamentId = document.getElementById('tournamentSelect').value;
            console.log('tournamentId:', tournamentId);
            const archerResponse = await fetch('/api/archers/tournament/' + tournamentId);
            archers = await archerResponse.json();
            console.log('archers:', archers);
            const archersList = document.getElementById('archersList');
            archersList.innerHTML = archers.map(a => `
                <div class="card mb-2" style="padding: 5px;">
                    <div class="card-body" style="padding: 10px;">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title" style="margin-bottom: 5px;">${a.name}</h5>
                            <span class="badge bg-secondary" style="font-size: 0.9em;">Factor: ${a.handycapFactor}</span>
                        </div>
                        <p class="card-text" style="margin-bottom: 5px;">Bow Class: ${a.bowclassName} (${a.bowclassCode})</p>
                        <input type="number" class="form-control" id="score_${a.id}" placeholder="Enter score" oninput="updateResults()" style="margin-bottom: 5px;">
                    </div>
                </div>
            `).join('');
        } catch (error) {
            console.error('Error fetching data:', error);
        }
    }

    function nextStep() {
        document.getElementById('step' + currentStep).style.display = 'none';
        currentStep++;
        if (currentStep === 2) {
            fetchArchers();
            document.getElementById('step' + currentStep).style.display = 'flex';
        }
    }

    function updateResults() {
        const results = archers.map(archer => {
            const scoreInput = document.getElementById('score_' + archer.id);
            const score = parseFloat(scoreInput.value) || 0;
            return {
                name: archer.name,
                bowclassName: archer.bowclassName,
                originalScore: score,
                handycapFactor: archer.handycapFactor,
                totalScore: score * archer.handycapFactor
            };
        }).sort((a, b) => b.totalScore - a.totalScore);

        const resultsList = document.getElementById('resultsList');
        resultsList.innerHTML = results.map((result, index) => {
            let borderColor = '';
            if (index === 0) borderColor = 'border: 2px solid gold;';
            else if (index === 1) borderColor = 'border: 2px solid silver;';
            else if (index === 2) borderColor = 'border: 2px solid #cd7f32;'; // bronze

            return `
            <li class="list-group-item" style="${borderColor}">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex justify-content-end">
                        <strong>${result.name}</strong> <small>(${result.bowclassName})</small>
                    </div>
                    <div class="d-flex justify-content-end">
                        <span class="badge bg-light text-dark">Score: ${result.originalScore}</span>
                        <span class="badge bg-light text-dark">Factor: ${result.handycapFactor}</span>
                        <span class="badge bg-primary" style="font-size: 1.2em;">Total: ${result.totalScore.toFixed(2)}</span>
                    </div>
                </div>
            </li>
            `;
        }).join('');
    }

</script>

{{ template "footer" }}
