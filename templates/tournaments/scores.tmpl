{{ define "scores" }}
{{ template "layout/head" . }}

<style>
    .greyed-out {
        color: grey;
        opacity: 0.6;
    }
</style>
    <div id="wizard" style="display: flex; flex-direction: row; height: 100vh;">
        <div class="tournamentArchers" style="flex: 1; margin-right: 10px; overflow-y: auto; height: 100vh;">
            <h2>Enter Scores</h2>
            <div class="input-group mb-3">
                <input type="text" id="archerSearch" class="form-control" placeholder="Search for an archer..." oninput="filterArchers()">
                <button class="btn btn-outline-secondary" type="button" onclick="clearSearch()">
                    <i class="bi bi-x-circle"></i>
                </button>
            </div>
            <div id="archersList">
                {{ range .Archers }}
                    {{ template "archer" . }}
                {{ end }}
            </div>
        </div>
        <div class="tournamentResults" style="flex: 1; margin-left: 10px; position: relative;">
            <a class="btn btn-outline-secondary" style="position: absolute; right: 10px; top: 10px;" href="/api/tournaments/{{ .Tournament.ID }}/download">
                <i class="bi bi-printer"></i>
            </a>
            <h2>Results</h2>
            <ul id="resultsList" class="list-group">
                {{ range .Archers }}
                    {{ template "scoredArcher" . }}
                {{ end }}
            </ul>
        </div>
    </div>

<script>
    function filterArchers() {
        const searchValue = document.getElementById('archerSearch').value.toLowerCase();
        const archerCards = document.querySelectorAll('#archersList .card');
        archerCards.forEach(card => {
            const archerName = card.querySelector('.card-title').textContent.toLowerCase();
            if (archerName.includes(searchValue)) {
                card.style.display = '';
            } else {
                card.style.display = 'none';
            }
        });
    }
    function clearSearch() {
        const searchInput = document.getElementById('archerSearch');
        searchInput.value = '';
        filterArchers();
    }
</script>


{{ template "layout/footer" }}
{{ end }}


{{ block "archer" . }}
<div id="archerBlock-{{ .ID }}" class="card mb-1" style="padding: 5px;">
    <div class="card-body" style="padding: 10px;">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="card-title" style="margin-bottom: 5px;">{{ .Name }} <small title="{{ .BowClassName }}">({{ .BowClassCode }} &mdash; {{ .HandicapFactor }})</small></h5>
            <input type="number" 
                name="archerScore"
                hx-put="/api/tournament/{{ .TournamentID }}/scores/archer/{{ .ID }}/score/{{ .ScoreID }}" 
                hx-trigger="keyup changed delay:200ms"
                hx-target="#archerBlock-{{ .ID }}"
                hx-swap="outerHTML"
                id="score-{{ .ID }}" 
                class="form-control score-input" 
                {{ if gt .Score 0.0 }} value="{{ .Score }}" {{ end }} 
                placeholder="Enter score" 
                style="margin-bottom: 5px; width: 80px;">
        </div>
        <progress id="progress-{{ .ID }}" value="0" max="500" style="width: 100%; display: none;"></progress>
        <script>
            htmx.on('#score-{{ .ID }}', 'htmx:xhr:progress', function(evt) {
                console.log('Progress for archer {{ .ID }}: ' + evt.detail.loaded + '/' + evt.detail.total);
                if (evt.detail.total === 0) {
                    htmx.find('#progress-{{ .ID }}').style.display = 'none';
                    return; // Avoid division by zero
                }
                htmx.find('#progress-{{ .ID }}').style.display = 'block';
                var duration = 500;
                var steps = 10;
                var currentProgress = 0;
                var timer = setInterval(function() {
                    currentProgress += steps;
                    htmx.find('#progress-{{ .ID }}').setAttribute('value', currentProgress);
                    if (currentProgress >= duration) {
                        clearInterval(timer);
                        htmx.find('#progress-{{ .ID }}').style.display = 'none';
                    }
                }, steps);
              // htmx.find('#progress-{{ .ID }}').setAttribute('value', evt.detail.loaded/evt.detail.total * 1000)
            });
        </script>
    </div>
</div>
{{ end }}


{{ block "scoredArcher" . }}
<li class="list-group-item {{ if eq .Score 0.0 }}greyed-out{{ end }}" style="{{ if eq .Ranking 1 }}border: 2px solid gold;{{ else if eq .Ranking 2 }}border: 2px solid silver;{{ else if eq .Ranking 3 }}border: 2px solid #cd7f32;{{ end }} margin-bottom: 10px; padding: 20px;">
    <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex justify-content-end" style="margin-right: 20px;">
            <strong>{{ .Ranking }}</strong>
        </div>
        <div class="d-flex justify-content-end" style="margin-right: 20px; width: 100%;">
            <strong style="flex-grow: 1; text-align: left;">{{ .Name }}</strong>
            <small title="{{ .BowClassName }}" style="text-align: right;">({{ .BowClassCode }})</small>
            <span class="badge bg-light text-dark" style="margin-right: 15px;">{{ .Score }} &times; {{ .HandicapFactor }}</span>
            <span class="badge bg-primary" style="font-size: 1.2em;">{{ printf "%.3f" .TotalScore }}</span>
        </div>
    </div>
</li>

{{ end }}

{{ block "scoredArchers-oob" . }}
    <div hx-swap-oob="true" id="resultsList">
        {{ range .Archers }}
            {{ template "scoredArcher" . }}
        {{ end }}
    </div>
{{ end }}
